.TH "scale" "1" "30 January 2017" "IPW v2" "IPW User Commands"
.SH NAME
.PP
\fBscale\fP - multiply all pixels by a scaling factor (DEPRECIATED)
.SH SYNOPSIS
.sp
.nf
.ft CR
\fBscale\fP \fB-o\fP \fIaop\fP [ \fB-v\fP \fIval\fP ] [ \fB-m\fP \fImask\fP ] [ \fB-n\fP \fIno_data\fP ] [ \fIimage\fP ]
.ft R
.fi
.SH DESCRIPTION
.PP
\fBscale\fP scales an image by an operator and a value, or by a math
transform, on a pixel by pixel basis: in[i] op val = out[i],
or op(in[i]) = out[i].  Possible operators are add, sub, mult,
div, and pow.  Also sqrt, ln(natural log)and exp, and log (log
base 10) and 10**x.
.PP
Zeroes in the denominator are replaced by ones;
.PP
sqrt of values less that 0 are set to 0;
.PP
if pixel value is <= 0 it is set to the machine negative epsilon
(the constant DBL_EPSILON in the system header file "float.h")
before the ln or log operation is performed.
.SH OPTIONS
.TP
\fB-o\fP \fIaop\fP
Perform the operation \fIaop\fP for each pixel.  Possible arithmitic
operators are add (+), sub (-), mult (*), div (/), and pow (**)
(\fB-v required);
also exponential operators sqrt, ln, exp, log, and 10x (10**x)
(\fB-v not required).
.sp
.TP
\fB-v\fP \fIval\fP
The image will be scaled by \fIval\fP.
.sp
.TP
\fB-m\fP \fImask\fP
Use \fImask\fP as a mask image.  Any points in \fImask\fP that are
0 will be passed through either unchanged or with the
\fIno_data\fP value if \fB-n is specified.
.sp
.TP
\fB-n\fP \fIno_data\fP
All points in \fImask\fP that are 0 will be passed through with
the value \fIno_data\fP rather than the input value.
.SH OPERANDS
.TP
\fIimage\fP
single-band input image (default: standard input)
.SH EXAMPLES
.PP
To add an offset of 1000 to an image:
.sp
.nf
.ft CR
        scale -o add -v 1000 image >new_imagE
.ft R
.fi

.PP
To convert an elev image from feet to meters:
.sp
.nf
.ft CR
        scale -o mult -v 0.3048 elev.feet > elev.meters
.ft R
.fi

.PP
To scale an image within a masked area from 0.0-1.0, and then
convert it to e**x, while setting values outside the mask to -1.0:
.sp
.nf
.ft CR
        imgstat -m mask image (to get img_max and img_min)
.ft R
.fi

.sp
.nf
.ft CR
        scale -o sub -v <img_min> -m mask image |
        scale -o div -v <img_max-img_min> -m mask |
        scale -o exp -m mask -n -1.0 > new_image
.ft R
.fi

.PP
Note: if the mask was not used, the first two steps
of this problem could be done using requant or edhdr.
.SH FILES
.PP
None.
.SH DIAGNOSTICS
.TP
image has \fIbands\fP bands; single band images only
Only single band images are supported.  For operations
between images, use iadd, mult, or (if it ever gets
written) imath.
.sp
.TP
no mask provided; \fB-n option ignored
The \fB-n option specifies a value to output when operating on
a masked section of the image.  This is only meaningful when
a mask image is supplied.
.sp
.TP
Bad arithmetic operator \fIop\fP
Valid operations are "add", "sub", "mult",
"div", "pow", "sqrt", "ln",
"exp", "log", and "10x".
Do not use their arithmetic equivalents, +,-,*,/,** or ^.
.sp
.TP
operator doesn't require a constant value; \fB-v option ignored
The \fB-v option specifies a value to be combined with the
operator; for "sqrt", "ln", "exp",
"log", and "10x" no value is required.
.SH NOTES
.PP
This command has been DEPRECIATED because its functionality
is provided by the command \fBimath\fP.
This command may be removed in future versions of IPW.
.SH HISTORY
.TP
Jun 1990
Written by Danny Marks, NSI, Environmental Protection
Agency Laboratory, Corvallis OR
.sp
.TP
Oct 1990
Added mask.  Kelly Longley, OSU, EPA ERL-C
.sp
.TP
Oct 1991
Added fast_scale() for scaling without mask (change header instead
pixels) Kelly Longley, OSU, EPA ERL-C
.sp
.TP
Sep 1995
Added sqrt, ln, exp, log, and 10x options.
Danny Marks, USGS, ERL-C
.SH SEE ALSO
.TP
IPW:
\fBbitcom\fP,
\fBbitcom\fP,
\fBedhdr\fP,
\fBiadd\fP,
\fBlincom\fP,
\fBmult\fP,
\fBrequant\fP
